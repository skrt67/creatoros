version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: creatorOS
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Temporal Server
  temporal:
    image: temporalio/auto-setup:1.20.0
    ports:
      - "7233:7233"
      - "8233:8233"
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PWD=postgres
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./temporal-config:/etc/temporal/config/dynamicconfig

  # Temporal Web UI
  temporal-web:
    image: temporalio/web:1.15.0
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal:7233
    depends_on:
      - temporal

  # FastAPI Application
  api:
    build: .
    ports:
      - "8003:8000"
    environment:
      - PORT=8000
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/creatorOS}
      - TEMPORAL_SERVER_URL=${TEMPORAL_SERVER_URL:-temporal:7233}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-secret-key-change-in-production}
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_started
    volumes:
      - .:/app
    command: python main.py

  # Temporal Worker
  worker:
    build: .
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/creatorOS
      - TEMPORAL_SERVER_URL=temporal:7233
      - ASSEMBLYAI_API_KEY=${ASSEMBLYAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      temporal:
        condition: service_started
    volumes:
      - .:/app
    command: python worker.py

volumes:
  postgres_data:
